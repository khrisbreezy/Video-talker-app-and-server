{"ast":null,"code":"var _jsxFileName = \"/Users/macuser/Desktop/Sites/React-Projects/VideoTalker/video-talker-app/src/Dashboard/components/DirectCall/DirectCall.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport IncomingCallDialog from '../IncomingCallDialog/IncomingCallDialog';\nimport CallRejectDialog from '../CallRejectedDialog/CallRejectedDialog';\nimport CallingDialog from '../CallingDialog/CallingDialog';\nimport LocalVideoView from '../LocalVideoView/LocalVideoView';\nimport RemoteVideoView from '../RemoteVideoView/RemoteVideoView';\nimport { callStates } from '../../../store/actions/call';\nimport ConversationButtons from '../ConversationButtons/ConversationButtons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DirectCall = props => {\n  _s();\n\n  // const { localStream, remoteStream } = props;\n  const localStream = useSelector(state => state.call.localStream);\n  const remoteStream = useSelector(state => state.call.remoteStream);\n  const callState = useSelector(state => state.call.callState);\n  const callingDialogVisible = useSelector(state => state.call.callingDialogVisible);\n  const callerUsername = useSelector(state => state.call.callerUsername);\n  const rejectReason = useSelector(state => state.call.rejectReason);\n  const localMicrophoneEnabled = useSelector(state => state.call.localMicrophoneEnabled);\n  const localCameraEnabled = useSelector(state => state.call.localCameraEnabled);\n  const screenSharing = useSelector(state => state.call.screenSharing);\n  console.log({\n    localMicrophoneEnabled\n  });\n  console.log({\n    localCameraEnabled\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(LocalVideoView, {\n      localStream: localStream\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), remoteStream && callState === callStates.CALL_IN_PROGRESS && /*#__PURE__*/_jsxDEV(RemoteVideoView, {\n      remoteStream: remoteStream\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 71\n    }, this), rejectReason.rejection && /*#__PURE__*/_jsxDEV(CallRejectDialog, {\n      reason: rejectReason.reason\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 34\n    }, this), callState === callStates.CALL_REQUESTED && /*#__PURE__*/_jsxDEV(IncomingCallDialog, {\n      callerUsername: callerUsername\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 53\n    }, this), callingDialogVisible && /*#__PURE__*/_jsxDEV(CallingDialog, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 32\n    }, this), /*#__PURE__*/_jsxDEV(ConversationButtons, {\n      localMicrophoneEnabled: localMicrophoneEnabled,\n      localCameraEnabled: localCameraEnabled,\n      screenSharing: screenSharing\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(DirectCall, \"Hx0D53hWijaWoQP/HoXQYL476l0=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = DirectCall;\nexport default DirectCall;\n\nvar _c;\n\n$RefreshReg$(_c, \"DirectCall\");","map":{"version":3,"sources":["/Users/macuser/Desktop/Sites/React-Projects/VideoTalker/video-talker-app/src/Dashboard/components/DirectCall/DirectCall.js"],"names":["React","useSelector","IncomingCallDialog","CallRejectDialog","CallingDialog","LocalVideoView","RemoteVideoView","callStates","ConversationButtons","DirectCall","props","localStream","state","call","remoteStream","callState","callingDialogVisible","callerUsername","rejectReason","localMicrophoneEnabled","localCameraEnabled","screenSharing","console","log","CALL_IN_PROGRESS","rejection","reason","CALL_REQUESTED"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,kBAAP,MAA+B,0CAA/B;AACA,OAAOC,gBAAP,MAA6B,0CAA7B;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,eAAP,MAA4B,oCAA5B;AACA,SAASC,UAAT,QAA2B,6BAA3B;AACA,OAAOC,mBAAP,MAAgC,4CAAhC;;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC5B;AAEA,QAAMC,WAAW,GAAGV,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWF,WAArB,CAA/B;AACA,QAAMG,YAAY,GAAGb,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWC,YAArB,CAAhC;AACA,QAAMC,SAAS,GAAGd,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWE,SAArB,CAA7B;AACA,QAAMC,oBAAoB,GAAGf,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWG,oBAArB,CAAxC;AACA,QAAMC,cAAc,GAAGhB,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWI,cAArB,CAAlC;AACA,QAAMC,YAAY,GAAGjB,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWK,YAArB,CAAhC;AACA,QAAMC,sBAAsB,GAAGlB,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWM,sBAArB,CAA1C;AACA,QAAMC,kBAAkB,GAAGnB,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWO,kBAArB,CAAtC;AACA,QAAMC,aAAa,GAAGpB,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWQ,aAArB,CAAjC;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY;AAACJ,IAAAA;AAAD,GAAZ;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAY;AAACH,IAAAA;AAAD,GAAZ;AAEA,sBACE;AAAA,4BACE,QAAC,cAAD;AAAgB,MAAA,WAAW,EAAET;AAA7B;AAAA;AAAA;AAAA;AAAA,YADF,EAEIG,YAAY,IAAIC,SAAS,KAAKR,UAAU,CAACiB,gBAA1C,iBAA+D,QAAC,eAAD;AAAiB,MAAA,YAAY,EAAEV;AAA/B;AAAA;AAAA;AAAA;AAAA,YAFlE,EAGGI,YAAY,CAACO,SAAb,iBAA0B,QAAC,gBAAD;AAAkB,MAAA,MAAM,EAAEP,YAAY,CAACQ;AAAvC;AAAA;AAAA;AAAA;AAAA,YAH7B,EAIIX,SAAS,KAAKR,UAAU,CAACoB,cAA1B,iBAA6C,QAAC,kBAAD;AAAoB,MAAA,cAAc,EAAEV;AAApC;AAAA;AAAA;AAAA;AAAA,YAJhD,EAKGD,oBAAoB,iBAAI,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YAL3B,eAME,QAAC,mBAAD;AACE,MAAA,sBAAsB,EAAEG,sBAD1B;AAEE,MAAA,kBAAkB,EAAEC,kBAFtB;AAGE,MAAA,aAAa,EAAEC;AAHjB;AAAA;AAAA;AAAA;AAAA,YANF;AAAA,kBADF;AAcD,CA9BD;;GAAMZ,U;UAGgBR,W,EACCA,W,EACHA,W,EACWA,W,EACNA,W,EACFA,W,EACUA,W,EACJA,W,EACLA,W;;;KAXlBQ,U;AAgCN,eAAeA,UAAf","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport IncomingCallDialog from '../IncomingCallDialog/IncomingCallDialog';\nimport CallRejectDialog from '../CallRejectedDialog/CallRejectedDialog';\nimport CallingDialog from '../CallingDialog/CallingDialog';\nimport LocalVideoView from '../LocalVideoView/LocalVideoView';\nimport RemoteVideoView from '../RemoteVideoView/RemoteVideoView';\nimport { callStates } from '../../../store/actions/call';\nimport ConversationButtons from '../ConversationButtons/ConversationButtons';\n\nconst DirectCall = (props) => {\n  // const { localStream, remoteStream } = props;\n\n  const localStream = useSelector(state => state.call.localStream);\n  const remoteStream = useSelector(state => state.call.remoteStream);\n  const callState = useSelector(state => state.call.callState);\n  const callingDialogVisible = useSelector(state => state.call.callingDialogVisible);\n  const callerUsername = useSelector(state => state.call.callerUsername);\n  const rejectReason = useSelector(state => state.call.rejectReason);\n  const localMicrophoneEnabled = useSelector(state => state.call.localMicrophoneEnabled);\n  const localCameraEnabled = useSelector(state => state.call.localCameraEnabled);\n  const screenSharing = useSelector(state => state.call.screenSharing);\n\n  console.log({localMicrophoneEnabled});\n  console.log({localCameraEnabled});\n\n  return (\n    <>\n      <LocalVideoView localStream={localStream} />\n      {(remoteStream && callState === callStates.CALL_IN_PROGRESS) && <RemoteVideoView remoteStream={remoteStream} />}\n      {rejectReason.rejection && <CallRejectDialog reason={rejectReason.reason} />}\n      {(callState === callStates.CALL_REQUESTED) && <IncomingCallDialog callerUsername={callerUsername} />}\n      {callingDialogVisible && <CallingDialog />}\n      <ConversationButtons\n        localMicrophoneEnabled={localMicrophoneEnabled}\n        localCameraEnabled={localCameraEnabled}\n        screenSharing={screenSharing}\n      />\n    </>\n  );\n};\n\nexport default DirectCall;\n"]},"metadata":{},"sourceType":"module"}
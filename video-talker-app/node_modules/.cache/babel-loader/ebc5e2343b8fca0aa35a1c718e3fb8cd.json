{"ast":null,"code":"var _jsxFileName = \"/Users/macuser/Desktop/Sites/React-Projects/VideoTalker/video-talker-app/src/Dashboard/components/ConversationButtons/ConversationButtons.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { MdCallEnd, MdMic, // MdMicOff,\nMdVideocam, // MdVideocamOff,\nMdScreenShare // MdVideoCall,\n// MdCamera\n} from 'react-icons/md';\nimport ConversionButton from './ConversionButton';\nimport { setLocalCameraEnabled, setLocalMicrophoneEnabled } from '../../../store/actions/call';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {\n  btnContainer: {\n    display: 'flex',\n    position: 'absolute',\n    bottom: '22%',\n    left: '35%'\n  },\n  icon: {\n    width: '25px',\n    height: '25px',\n    fill: '#e6e5e8'\n  }\n};\n\nconst ConversationButtons = _ref => {\n  _s();\n\n  let {\n    localMircophoneEnabled,\n    localCameraEnabled\n  } = _ref;\n  const dispatch = useDispatch();\n  const localStream = useSelector(state => state.call.localStream);\n\n  const handleMicButtonHandler = () => {\n    const micEnabled = localMircophoneEnabled;\n    localStream.getAudioTracks;\n  };\n\n  const handlerCameraButtonHandler = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.btnContainer,\n    children: [/*#__PURE__*/_jsxDEV(ConversionButton, {\n      children: /*#__PURE__*/_jsxDEV(MdMic, {\n        style: styles.icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ConversionButton, {\n      children: /*#__PURE__*/_jsxDEV(MdCallEnd, {\n        style: styles.icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ConversionButton, {\n      children: /*#__PURE__*/_jsxDEV(MdVideocam, {\n        style: styles.icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ConversionButton, {\n      children: /*#__PURE__*/_jsxDEV(MdScreenShare, {\n        style: styles.icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ConversationButtons, \"ue739sNrMiuKvyCRbOx7ZD51Ehw=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ConversationButtons;\nexport default ConversationButtons;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConversationButtons\");","map":{"version":3,"sources":["/Users/macuser/Desktop/Sites/React-Projects/VideoTalker/video-talker-app/src/Dashboard/components/ConversationButtons/ConversationButtons.js"],"names":["React","useDispatch","useSelector","MdCallEnd","MdMic","MdVideocam","MdScreenShare","ConversionButton","setLocalCameraEnabled","setLocalMicrophoneEnabled","styles","btnContainer","display","position","bottom","left","icon","width","height","fill","ConversationButtons","localMircophoneEnabled","localCameraEnabled","dispatch","localStream","state","call","handleMicButtonHandler","micEnabled","getAudioTracks","handlerCameraButtonHandler"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACIC,SADJ,EAEIC,KAFJ,EAGI;AACAC,UAJJ,EAKI;AACAC,aANJ,CAOI;AACA;AARJ,OASO,gBATP;AAWA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,SAASC,qBAAT,EAAgCC,yBAAhC,QAAiE,6BAAjE;;AAEA,MAAMC,MAAM,GAAG;AACZC,EAAAA,YAAY,EAAE;AACbC,IAAAA,OAAO,EAAE,MADI;AAEbC,IAAAA,QAAQ,EAAE,UAFG;AAGbC,IAAAA,MAAM,EAAE,KAHK;AAIbC,IAAAA,IAAI,EAAE;AAJO,GADF;AAOZC,EAAAA,IAAI,EAAE;AACLC,IAAAA,KAAK,EAAE,MADF;AAELC,IAAAA,MAAM,EAAE,MAFH;AAGLC,IAAAA,IAAI,EAAE;AAHD;AAPM,CAAf;;AAeA,MAAMC,mBAAmB,GAAG,QAAkD;AAAA;;AAAA,MAAjD;AAACC,IAAAA,sBAAD;AAAyBC,IAAAA;AAAzB,GAAiD;AAC1E,QAAMC,QAAQ,GAAGtB,WAAW,EAA5B;AAEA,QAAMuB,WAAW,GAAGtB,WAAW,CAACuB,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWF,WAArB,CAA/B;;AAEA,QAAMG,sBAAsB,GAAG,MAAM;AACjC,UAAMC,UAAU,GAAGP,sBAAnB;AACAG,IAAAA,WAAW,CAACK,cAAZ;AAEH,GAJD;;AAMA,QAAMC,0BAA0B,GAAG,MAAM,CAExC,CAFD;;AAIA,sBACI;AAAK,IAAA,KAAK,EAAEpB,MAAM,CAACC,YAAnB;AAAA,4BACI,QAAC,gBAAD;AAAA,6BACI,QAAC,KAAD;AAAO,QAAA,KAAK,EAAED,MAAM,CAACM;AAArB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,gBAAD;AAAA,6BACI,QAAC,SAAD;AAAW,QAAA,KAAK,EAAEN,MAAM,CAACM;AAAzB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAJJ,eAOI,QAAC,gBAAD;AAAA,6BACI,QAAC,UAAD;AAAY,QAAA,KAAK,EAAEN,MAAM,CAACM;AAA1B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAPJ,eAUI,QAAC,gBAAD;AAAA,6BACI,QAAC,aAAD;AAAe,QAAA,KAAK,EAAEN,MAAM,CAACM;AAA7B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CA/BD;;GAAMI,mB;UACenB,W,EAEGC,W;;;KAHlBkB,mB;AAiCN,eAAeA,mBAAf","sourcesContent":["import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    MdCallEnd,\n    MdMic,\n    // MdMicOff,\n    MdVideocam,\n    // MdVideocamOff,\n    MdScreenShare,\n    // MdVideoCall,\n    // MdCamera\n} from 'react-icons/md';\n\nimport ConversionButton from './ConversionButton';\nimport { setLocalCameraEnabled, setLocalMicrophoneEnabled } from '../../../store/actions/call';\n\nconst styles = {\n   btnContainer: {\n    display: 'flex',\n    position: 'absolute',\n    bottom: '22%',\n    left: '35%'\n   },\n   icon: {\n    width: '25px',\n    height: '25px',\n    fill: '#e6e5e8'\n   }\n};\n\n\nconst ConversationButtons = ({localMircophoneEnabled, localCameraEnabled}) => {\n    const dispatch = useDispatch();\n\n    const localStream = useSelector(state => state.call.localStream);\n\n    const handleMicButtonHandler = () => {\n        const micEnabled = localMircophoneEnabled;\n        localStream.getAudioTracks\n\n    };\n\n    const handlerCameraButtonHandler = () => {\n\n    }\n\n    return (\n        <div style={styles.btnContainer}>\n            <ConversionButton>\n                <MdMic style={styles.icon} />\n            </ConversionButton>\n            <ConversionButton>\n                <MdCallEnd style={styles.icon} />\n            </ConversionButton>\n            <ConversionButton>\n                <MdVideocam style={styles.icon} />\n            </ConversionButton>\n            <ConversionButton>\n                <MdScreenShare style={styles.icon} />\n            </ConversionButton>\n        </div>\n    );\n};\n\nexport default ConversationButtons;"]},"metadata":{},"sourceType":"module"}
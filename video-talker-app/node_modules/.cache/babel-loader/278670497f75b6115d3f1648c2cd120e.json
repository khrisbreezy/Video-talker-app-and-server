{"ast":null,"code":"import { setLocalStream, callStates, setCallState, setCallingDialog, setCallerUsername } from \"../../store/actions/call\";\nimport store from \"../../store/store\";\nimport { sendPreOffer } from \"../wssConnection/wssConnection\";\nconst defaultConstrains = {\n  video: true,\n  audio: true\n};\nconst preOfferAnswers = {};\nexport const getLocalStream = () => {\n  navigator.mediaDevices.getUserMedia(defaultConstrains).then(stream => {\n    console.log({\n      stream\n    });\n    store.dispatch(setLocalStream(stream));\n    store.dispatch(setCallState(callStates.CALL_AVAILABLE));\n  }).catch(e => {\n    console.log('Error occured when user trie dto get local stream');\n    console.log(e);\n  });\n};\nlet connectedUserSocketId;\nexport const callToOther = activeUserDetails => {\n  connectedUserSocketId = activeUserDetails.socketId;\n  store.dispatch(setCallState(callStates.CALL_IN_PROGRESS));\n  store.dispatch(setCallingDialog(true));\n  sendPreOffer({\n    callee: activeUserDetails,\n    caller: {\n      username: store.getState().dashReducer.username\n    }\n  });\n};\nexport const handlePreoffer = data => {\n  connectedUserSocketId = data.callerSocketId;\n  store.dispatch(setCallerUsername(data.callerUsername));\n  store.dispatch(setCallState(callStates.CALL_REQUESTED));\n};","map":{"version":3,"sources":["/Users/macuser/Desktop/Sites/React-Projects/VideoTalker/video-talker-app/src/utils/webRTC/webRTCHandler.js"],"names":["setLocalStream","callStates","setCallState","setCallingDialog","setCallerUsername","store","sendPreOffer","defaultConstrains","video","audio","preOfferAnswers","getLocalStream","navigator","mediaDevices","getUserMedia","then","stream","console","log","dispatch","CALL_AVAILABLE","catch","e","connectedUserSocketId","callToOther","activeUserDetails","socketId","CALL_IN_PROGRESS","callee","caller","username","getState","dashReducer","handlePreoffer","data","callerSocketId","callerUsername","CALL_REQUESTED"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,UAAzB,EAAqCC,YAArC,EAAmDC,gBAAnD,EAAqEC,iBAArE,QAA+F,0BAA/F;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,SAASC,YAAT,QAA6B,gCAA7B;AAEA,MAAMC,iBAAiB,GAAG;AACtBC,EAAAA,KAAK,EAAE,IADe;AAEtBC,EAAAA,KAAK,EAAE;AAFe,CAA1B;AAKA,MAAMC,eAAe,GAAI,EAAzB;AAEA,OAAO,MAAMC,cAAc,GAAG,MAAM;AAChCC,EAAAA,SAAS,CAACC,YAAV,CAAuBC,YAAvB,CAAoCP,iBAApC,EACCQ,IADD,CACMC,MAAM,IAAI;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAY;AAACF,MAAAA;AAAD,KAAZ;AACAX,IAAAA,KAAK,CAACc,QAAN,CAAenB,cAAc,CAACgB,MAAD,CAA7B;AACAX,IAAAA,KAAK,CAACc,QAAN,CAAejB,YAAY,CAACD,UAAU,CAACmB,cAAZ,CAA3B;AACH,GALD,EAMCC,KAND,CAMOC,CAAC,IAAI;AACRL,IAAAA,OAAO,CAACC,GAAR,CAAY,mDAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYI,CAAZ;AACH,GATD;AAUH,CAXM;AAaP,IAAIC,qBAAJ;AAEA,OAAO,MAAMC,WAAW,GAAIC,iBAAD,IAAuB;AAC9CF,EAAAA,qBAAqB,GAAIE,iBAAiB,CAACC,QAA3C;AACArB,EAAAA,KAAK,CAACc,QAAN,CAAejB,YAAY,CAACD,UAAU,CAAC0B,gBAAZ,CAA3B;AACAtB,EAAAA,KAAK,CAACc,QAAN,CAAehB,gBAAgB,CAAC,IAAD,CAA/B;AACAG,EAAAA,YAAY,CAAC;AACTsB,IAAAA,MAAM,EAAEH,iBADC;AAETI,IAAAA,MAAM,EAAE;AACJC,MAAAA,QAAQ,EAAEzB,KAAK,CAAC0B,QAAN,GAAiBC,WAAjB,CAA6BF;AADnC;AAFC,GAAD,CAAZ;AAOH,CAXM;AAaP,OAAO,MAAMG,cAAc,GAAIC,IAAD,IAAU;AACpCX,EAAAA,qBAAqB,GAAGW,IAAI,CAACC,cAA7B;AACA9B,EAAAA,KAAK,CAACc,QAAN,CAAef,iBAAiB,CAAC8B,IAAI,CAACE,cAAN,CAAhC;AACA/B,EAAAA,KAAK,CAACc,QAAN,CAAejB,YAAY,CAACD,UAAU,CAACoC,cAAZ,CAA3B;AACH,CAJM","sourcesContent":["import { setLocalStream, callStates, setCallState, setCallingDialog, setCallerUsername  } from \"../../store/actions/call\";\nimport store from \"../../store/store\";\nimport { sendPreOffer } from \"../wssConnection/wssConnection\";\n\nconst defaultConstrains = {\n    video: true,\n    audio: true\n};\n\nconst preOfferAnswers = ({})\n\nexport const getLocalStream = () => {\n    navigator.mediaDevices.getUserMedia(defaultConstrains)\n    .then(stream => {\n        console.log({stream});\n        store.dispatch(setLocalStream(stream));\n        store.dispatch(setCallState(callStates.CALL_AVAILABLE));\n    })\n    .catch(e => {\n        console.log('Error occured when user trie dto get local stream');\n        console.log(e);\n    })\n};\n\nlet connectedUserSocketId;\n\nexport const callToOther = (activeUserDetails) => {\n    connectedUserSocketId =  activeUserDetails.socketId;\n    store.dispatch(setCallState(callStates.CALL_IN_PROGRESS));\n    store.dispatch(setCallingDialog(true));\n    sendPreOffer({\n        callee: activeUserDetails,\n        caller: {\n            username: store.getState().dashReducer.username\n        }\n    })\n\n};\n\nexport const handlePreoffer = (data) => {\n    connectedUserSocketId = data.callerSocketId;\n    store.dispatch(setCallerUsername(data.callerUsername));\n    store.dispatch(setCallState(callStates.CALL_REQUESTED));\n}"]},"metadata":{},"sourceType":"module"}
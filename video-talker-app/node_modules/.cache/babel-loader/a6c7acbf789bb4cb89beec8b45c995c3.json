{"ast":null,"code":"import { setLocalStream, callStates, setCallState, setCallingDialog, setCallerUsername } from \"../../store/actions/call\";\nimport store from \"../../store/store\";\nimport { sendPreOffer } from \"../wssConnection/wssConnection\";\nconst defaultConstrains = {\n  video: true,\n  audio: true\n};\nconst preOfferAnswers = {\n  CALL_ACCEPTED: 'CALL_ACCEPTED',\n  CALL_REJECTED: 'CALL_REJECTED',\n  CALL_NOT_AVAILABLE: 'CALL_NOT_AVAILABLE'\n};\nexport const getLocalStream = () => {\n  navigator.mediaDevices.getUserMedia(defaultConstrains).then(stream => {\n    console.log({\n      stream\n    });\n    store.dispatch(setLocalStream(stream));\n    store.dispatch(setCallState(callStates.CALL_AVAILABLE));\n  }).catch(e => {\n    console.log('Error occured when user trie dto get local stream');\n    console.log(e);\n  });\n};\nlet connectedUserSocketId;\nexport const callToOther = activeUserDetails => {\n  connectedUserSocketId = activeUserDetails.socketId;\n  store.dispatch(setCallState(callStates.CALL_IN_PROGRESS));\n  store.dispatch(setCallingDialog(true));\n  sendPreOffer({\n    callee: activeUserDetails,\n    caller: {\n      username: store.getState().dashReducer.username\n    }\n  });\n};\nexport const handlePreoffer = data => {\n  connectedUserSocketId = data.callerSocketId;\n  store.dispatch(setCallerUsername(data.callerUsername));\n  store.dispatch(setCallState(callStates.CALL_REQUESTED));\n}; // check if call is","map":{"version":3,"sources":["/Users/macuser/Desktop/Sites/React-Projects/VideoTalker/video-talker-app/src/utils/webRTC/webRTCHandler.js"],"names":["setLocalStream","callStates","setCallState","setCallingDialog","setCallerUsername","store","sendPreOffer","defaultConstrains","video","audio","preOfferAnswers","CALL_ACCEPTED","CALL_REJECTED","CALL_NOT_AVAILABLE","getLocalStream","navigator","mediaDevices","getUserMedia","then","stream","console","log","dispatch","CALL_AVAILABLE","catch","e","connectedUserSocketId","callToOther","activeUserDetails","socketId","CALL_IN_PROGRESS","callee","caller","username","getState","dashReducer","handlePreoffer","data","callerSocketId","callerUsername","CALL_REQUESTED"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,UAAzB,EAAqCC,YAArC,EAAmDC,gBAAnD,EAAqEC,iBAArE,QAA+F,0BAA/F;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,SAASC,YAAT,QAA6B,gCAA7B;AAEA,MAAMC,iBAAiB,GAAG;AACtBC,EAAAA,KAAK,EAAE,IADe;AAEtBC,EAAAA,KAAK,EAAE;AAFe,CAA1B;AAKA,MAAMC,eAAe,GAAG;AACpBC,EAAAA,aAAa,EAAE,eADK;AAEpBC,EAAAA,aAAa,EAAE,eAFK;AAGpBC,EAAAA,kBAAkB,EAAE;AAHA,CAAxB;AAMA,OAAO,MAAMC,cAAc,GAAG,MAAM;AAChCC,EAAAA,SAAS,CAACC,YAAV,CAAuBC,YAAvB,CAAoCV,iBAApC,EACCW,IADD,CACMC,MAAM,IAAI;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAY;AAACF,MAAAA;AAAD,KAAZ;AACAd,IAAAA,KAAK,CAACiB,QAAN,CAAetB,cAAc,CAACmB,MAAD,CAA7B;AACAd,IAAAA,KAAK,CAACiB,QAAN,CAAepB,YAAY,CAACD,UAAU,CAACsB,cAAZ,CAA3B;AACH,GALD,EAMCC,KAND,CAMOC,CAAC,IAAI;AACRL,IAAAA,OAAO,CAACC,GAAR,CAAY,mDAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYI,CAAZ;AACH,GATD;AAUH,CAXM;AAaP,IAAIC,qBAAJ;AAEA,OAAO,MAAMC,WAAW,GAAIC,iBAAD,IAAuB;AAC9CF,EAAAA,qBAAqB,GAAIE,iBAAiB,CAACC,QAA3C;AACAxB,EAAAA,KAAK,CAACiB,QAAN,CAAepB,YAAY,CAACD,UAAU,CAAC6B,gBAAZ,CAA3B;AACAzB,EAAAA,KAAK,CAACiB,QAAN,CAAenB,gBAAgB,CAAC,IAAD,CAA/B;AACAG,EAAAA,YAAY,CAAC;AACTyB,IAAAA,MAAM,EAAEH,iBADC;AAETI,IAAAA,MAAM,EAAE;AACJC,MAAAA,QAAQ,EAAE5B,KAAK,CAAC6B,QAAN,GAAiBC,WAAjB,CAA6BF;AADnC;AAFC,GAAD,CAAZ;AAOH,CAXM;AAaP,OAAO,MAAMG,cAAc,GAAIC,IAAD,IAAU;AACpCX,EAAAA,qBAAqB,GAAGW,IAAI,CAACC,cAA7B;AACAjC,EAAAA,KAAK,CAACiB,QAAN,CAAelB,iBAAiB,CAACiC,IAAI,CAACE,cAAN,CAAhC;AACAlC,EAAAA,KAAK,CAACiB,QAAN,CAAepB,YAAY,CAACD,UAAU,CAACuC,cAAZ,CAA3B;AACH,CAJM,C,CAMP","sourcesContent":["import { setLocalStream, callStates, setCallState, setCallingDialog, setCallerUsername  } from \"../../store/actions/call\";\nimport store from \"../../store/store\";\nimport { sendPreOffer } from \"../wssConnection/wssConnection\";\n\nconst defaultConstrains = {\n    video: true,\n    audio: true\n};\n\nconst preOfferAnswers = {\n    CALL_ACCEPTED: 'CALL_ACCEPTED',\n    CALL_REJECTED: 'CALL_REJECTED',\n    CALL_NOT_AVAILABLE: 'CALL_NOT_AVAILABLE'\n};\n\nexport const getLocalStream = () => {\n    navigator.mediaDevices.getUserMedia(defaultConstrains)\n    .then(stream => {\n        console.log({stream});\n        store.dispatch(setLocalStream(stream));\n        store.dispatch(setCallState(callStates.CALL_AVAILABLE));\n    })\n    .catch(e => {\n        console.log('Error occured when user trie dto get local stream');\n        console.log(e);\n    })\n};\n\nlet connectedUserSocketId;\n\nexport const callToOther = (activeUserDetails) => {\n    connectedUserSocketId =  activeUserDetails.socketId;\n    store.dispatch(setCallState(callStates.CALL_IN_PROGRESS));\n    store.dispatch(setCallingDialog(true));\n    sendPreOffer({\n        callee: activeUserDetails,\n        caller: {\n            username: store.getState().dashReducer.username\n        }\n    })\n\n};\n\nexport const handlePreoffer = (data) => {\n    connectedUserSocketId = data.callerSocketId;\n    store.dispatch(setCallerUsername(data.callerUsername));\n    store.dispatch(setCallState(callStates.CALL_REQUESTED));\n};\n\n// check if call is"]},"metadata":{},"sourceType":"module"}
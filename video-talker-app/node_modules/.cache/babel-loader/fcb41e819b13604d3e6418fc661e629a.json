{"ast":null,"code":"import socketClient from 'socket.io-client';\nconst SERVER = 'http://localhost:5000';\nlet socket;\nconst broadcastEventTypes = {\n  ACTIVE_USERS: 'ACTIVE_USERS',\n  GROUP_CALL_ROOMS: 'GROUP_CALL_ROOMS'\n};\nexport const connectWithWebSocket = () => {\n  socket = socketClient(SERVER);\n  socket.on('connection', () => {\n    console.log('Successful connection');\n    console.log(socket.id);\n  });\n  socket.on('broadcast', data => {\n    handleBroadcastEvents(data);\n  });\n};\nexport const registerNewUser = username => {\n  socket.emit('register-new-user', {\n    username: username,\n    socketId: socket.id\n  });\n};\nexport const handleBroadcastEvents = data => {\n  switch (data.event) {\n    case broadcastEventTypes.ACTIVE_USERS:\n      console.log(data.activeUsers, 'datalist');\n      const activeUsers = data.activeUsers.filter(activeUser => activeUser.socketId !== socket.id);\n      console.log({\n        activeUsers\n      }, 'event');\n      localStorage.setItem('activeUsers', JSON.stringify(activeUsers));\n      break;\n\n    default:\n      return;\n  }\n};","map":{"version":3,"sources":["/Users/macuser/Desktop/Sites/React-Projects/VideoTalker/video-talker-app/src/utils/wssConnection/wssConnection.js"],"names":["socketClient","SERVER","socket","broadcastEventTypes","ACTIVE_USERS","GROUP_CALL_ROOMS","connectWithWebSocket","on","console","log","id","data","handleBroadcastEvents","registerNewUser","username","emit","socketId","event","activeUsers","filter","activeUser","localStorage","setItem","JSON","stringify"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,kBAAzB;AACA,MAAMC,MAAM,GAAG,uBAAf;AAEA,IAAIC,MAAJ;AAIA,MAAMC,mBAAmB,GAAG;AACxBC,EAAAA,YAAY,EAAE,cADU;AAExBC,EAAAA,gBAAgB,EAAE;AAFM,CAA5B;AAKA,OAAO,MAAMC,oBAAoB,GAAG,MAAM;AACtCJ,EAAAA,MAAM,GAAGF,YAAY,CAACC,MAAD,CAArB;AAEAC,EAAAA,MAAM,CAACK,EAAP,CAAU,YAAV,EAAwB,MAAM;AAC1BC,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYP,MAAM,CAACQ,EAAnB;AACH,GAHD;AAKAR,EAAAA,MAAM,CAACK,EAAP,CAAU,WAAV,EAAwBI,IAAD,IAAU;AAC9BC,IAAAA,qBAAqB,CAACD,IAAD,CAArB;AACF,GAFD;AAGH,CAXM;AAaP,OAAO,MAAME,eAAe,GAAIC,QAAD,IAAc;AACzCZ,EAAAA,MAAM,CAACa,IAAP,CAAY,mBAAZ,EAAiC;AAC7BD,IAAAA,QAAQ,EAAEA,QADmB;AAE7BE,IAAAA,QAAQ,EAAEd,MAAM,CAACQ;AAFY,GAAjC;AAIH,CALM;AAOP,OAAO,MAAME,qBAAqB,GAAID,IAAD,IAAU;AAC3C,UAAQA,IAAI,CAACM,KAAb;AACI,SAAKd,mBAAmB,CAACC,YAAzB;AACII,MAAAA,OAAO,CAACC,GAAR,CAAYE,IAAI,CAACO,WAAjB,EAA8B,UAA9B;AACA,YAAMA,WAAW,GAAGP,IAAI,CAACO,WAAL,CAAiBC,MAAjB,CAAwBC,UAAU,IAAIA,UAAU,CAACJ,QAAX,KAAwBd,MAAM,CAACQ,EAArE,CAApB;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY;AAACS,QAAAA;AAAD,OAAZ,EAA2B,OAA3B;AACAG,MAAAA,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAoCC,IAAI,CAACC,SAAL,CAAeN,WAAf,CAApC;AACA;;AACJ;AAAS;AAPb;AASH,CAVM","sourcesContent":["import socketClient from 'socket.io-client';\nconst SERVER = 'http://localhost:5000';\n\nlet socket;\n\n\n\nconst broadcastEventTypes = {\n    ACTIVE_USERS: 'ACTIVE_USERS',\n    GROUP_CALL_ROOMS: 'GROUP_CALL_ROOMS'\n}\n\nexport const connectWithWebSocket = () => {\n    socket = socketClient(SERVER);\n\n    socket.on('connection', () => {\n        console.log('Successful connection');\n        console.log(socket.id);\n    });\n\n    socket.on('broadcast', (data) => {\n       handleBroadcastEvents(data);\n    });\n};\n\nexport const registerNewUser = (username) => {\n    socket.emit('register-new-user', {\n        username: username,\n        socketId: socket.id\n    })\n};\n\nexport const handleBroadcastEvents = (data) => {\n    switch (data.event) {\n        case broadcastEventTypes.ACTIVE_USERS:\n            console.log(data.activeUsers, 'datalist');\n            const activeUsers = data.activeUsers.filter(activeUser => activeUser.socketId !== socket.id);\n            console.log({activeUsers}, 'event');\n            localStorage.setItem('activeUsers', JSON.stringify(activeUsers));\n            break;\n        default: return;\n    }\n}"]},"metadata":{},"sourceType":"module"}